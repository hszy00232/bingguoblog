{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/user.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;mBAOQ,W;;UAEA,K,EACA,O,EAEE,e,EACA,Q,EAYF,Q,EACA,S,EACA,Q,EAWA,Q;;;;;;AA7BA,mB,GAAQ,KAAK,KAAL,CAAW,SAAX,C;;qBACQ,MAAM,UAAN,E;;;AAAhB,qB;;mBACD,QAAQ,e;;;;;AACL,6B,GAAkB,KAAK,IAAL,CAAU,iBAAV,C;AAClB,sB,GAAW,oBAAU,IAAV,CAAe,MAAf,CAAsB;AACnC,wBAAQ,QAAQ,eADmB;AAEnC,0BAAU,QAFyB;AAGnC,uBAAO,eAH4B;AAInC,wBAAQ;AAJ2B,eAAtB,C;;kBAMX,Q;;;;;+CACK,KAAK,IAAL,CAAU,uBAAV,C;;;;;AAKP,sB,GAAW,KAAK,IAAL,CAAU,UAAV,C;AACX,uB,GAAY,KAAK,KAAL,CAAW,MAAX,C;;qBACK,UAAU,KAAV,CAAgB,EAAC,MAAM,QAAP,EAAhB,EAAkC,IAAlC,E;;;AAAjB,sB;;mBACD,MAAM,OAAN,CAAc,QAAd,C;;;;;+CACM,KAAK,IAAL,CAAU,eAAV,C;;;oBAIN,CAAC,SAAS,MAAT,GAAkB,CAAnB,MAA0B,C;;;;;+CACpB,KAAK,IAAL,CAAU,mBAAV,C;;;;;AAIL,sB,GAAW,KAAK,IAAL,CAAU,UAAV,C;;kBACX,UAAU,aAAV,CAAwB,QAAxB,EAAkC,QAAlC,C;;;;;+CACK,KAAK,IAAL,CAAU,eAAV,C;;;;qBAGH,KAAK,OAAL,CAAa,UAAb,EAAyB,QAAzB,C;;;+CAEC,KAAK,OAAL,E;;;;;;;;;;;;;;;;;;;;;;mBAMH,Y;;;;;;;qBACE,KAAK,OAAL,CAAa,UAAb,EAAyB,EAAzB,C;;;gDACC,KAAK,QAAL,CAAc,GAAd,C",
    "file": "../../../src/admin/controller/user.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport speakeasy from 'speakeasy';\n\nexport default class extends Base {\n  /**\n   * login\n   * @return {} []\n   */\n  async loginAction(){\n    //二步验证\n    let model = this.model('options');\n    let options = await model.getOptions();\n    if(options.two_factor_auth){\n      let two_factor_auth = this.post('two_factor_auth');\n      let verified = speakeasy.totp.verify({\n        secret: options.two_factor_auth,\n        encoding: 'base32',\n        token: two_factor_auth,\n        window: 2\n      });\n      if(!verified){\n        return this.fail('TWO_FACTOR_AUTH_ERROR');\n      }\n    }\n\n    //校验帐号和密码\n    let username = this.post('username');\n    let userModel = this.model('user');\n    let userInfo = await userModel.where({name: username}).find();\n    if(think.isEmpty(userInfo)){\n      return this.fail('ACCOUNT_ERROR');\n    }\n\n    //帐号是否被禁用\n    if((userInfo.status | 0) !== 1){\n      return this.fail('ACCOUNT_FORBIDDEN');\n    }\n\n    //校验密码\n    let password = this.post('password');\n    if(!userModel.checkPassword(userInfo, password)){\n      return this.fail('ACCOUNT_ERROR');\n    }\n\n    await this.session('userInfo', userInfo);\n\n    return this.success();\n  }\n  /**\n   * logout\n   * @return {} \n   */\n  async logoutAction(){\n    await this.session('userInfo', '');\n    return this.redirect('/');\n  }\n}"
    ]
}