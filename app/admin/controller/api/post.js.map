{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/post.js"
    ],
    "names": [],
    "mappings": "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",
    "file": "../../../../src/admin/controller/api/post.js",
    "sourcesContent": [
        "'use strict';\nimport marked from \"marked\";\nimport Base from './base.js';\nimport request from 'request';\nimport markToc from \"marked-toc\";\nimport {PasswordHash} from 'phpass';\nimport highlight from 'highlight.js';\n\nexport default class extends Base {\n  modelInstance = this.modelInstance.where({type: 0});\n  /**\n   * get\n   * @return {[type]} [description]\n   */\n  async getAction(self){\n    // this.modelInstance.field('id,user_id,type,status,title,pathname,create_time,update_time');\n    let data;\n    if( this.id ) {\n      if( this.id === 'lastest' ) {\n        return this.lastest();\n      }\n      data = await this.modelInstance.where({id: this.id}).find();\n      //文章选项\n      if(data.options){\n        data.options = JSON.parse(data.options) || {};\n      }else{\n        data.options = {};\n      }\n    } else {\n      let where = {};\n      //不是管理员，只显示个人的文章\n      if(this.userInfo.type !== 1){\n        where.user_id = this.userInfo.id;\n      }\n\n      if(this.get('status')) {\n        where.status = this.get('status');\n      }\n\n      if(this.get('keyword')) {\n        let keywords = this.get('keyword').split(/\\s+/g);\n        if( keywords.indexOf(':public') > -1 || keywords.indexOf(':private') > -1 ) {\n          where.is_public = Number(keywords.indexOf(':public') > -1);\n          keywords = keywords.filter(word => word !== ':public' && word !== ':private');\n        }\n        if(keywords.length > 0) {\n          where.title = [\"like\", keywords.map(word => `%${word}%`)];\n        }\n      }\n      \n      let field = ['id', 'title', 'user_id', 'create_time', 'update_time', 'status', 'pathname'];\n      data = await this.modelInstance.where(where).field(field).order('id DESC').page( this.get('page'), 15 ).countSelect();\n    }\n    return this.success(data);\n  }\n\n  getBaseAction(self) {\n    return super.getAction(self);\n  }\n  /**\n   * add user\n   * @return {[type]} [description]\n   */\n  async postAction(){\n    let data = this.post();\n    //check pathname\n    let post = await this.modelInstance.where({pathname: data.pathname}).select();\n    if( post.length > 0 ) {\n      return this.fail('PATHNAME_EXIST');\n    }\n\n    /** 如果是编辑发布文章的话默认状态改为审核中 **/\n    if( data.status == 3 && this.userInfo.type == 2 ) {\n      data.status = 1;\n    }\n\n    /** 推送文章 **/\n    this.pushPost(data);\n\n    data.tag = await this.getTagIds(data.tag);\n    data = this.getContentAndSummary(data);\n    data.user_id = this.userInfo.id;\n    data = this.getPostTime(data);\n\n    let insertId = await this.modelInstance.addPost(data);\n    return this.success({id: insertId});\n  }\n  /**\n   * update user info\n   * @return {[type]} [description]\n   */\n  async putAction(){\n    if (!this.id) {\n      return this.fail('PARAMS_ERROR');\n    }\n    let data = this.post();\n    /** 推送文章 **/\n    this.pushPost(data);\n\n    data.id = this.id;\n    if(data.markdown_content) {\n      data = this.getContentAndSummary(data);\n    }\n    if(data.create_time) {\n      data = this.getPostTime(data);\n    }\n    if(data.tag) {\n      data.tag = await this.getTagIds(data.tag);\n    }\n\n    let rows = await this.modelInstance.savePost(data);\n    return this.success({affectedRows: rows});\n  }\n\n  async deleteAction() {\n    if(!this.id) {\n      return this.fail('PARAMS_ERROR');\n    }\n\n    /** 如果不是管理员且不是本文作者则无权限删除文章 **/\n    if(this.userInfo.type !== 1) {\n      let post = this.modelInstance.where({id}).find();\n      if( post.user_id !== this.userInfo.id ) {\n        return this.fail('ACCESS_ERROR');\n      }\n    }\n\n    await this.modelInstance.deletePost(this.id);\n    return this.success();\n  }\n\n  async pushPost(post) {\n    if( post.status != 3 && data.is_public != 1 && data.push_sites.length == 0 ) {\n      return;\n    }\n\n    post = think.extend({}, post);\n    post.options = JSON.parse(post.options);\n\n    let options = await this.model('options').getOptions();\n    let push_sites = options.push_sites;\n    let push_sites_keys = post.options.push_sites;\n    let passwordHash = new PasswordHash();\n\n    async function push(post, {appKey, appSecret, url}) {\n      let auth_key = passwordHash.hashPassword(`${appSecret}${post.markdown_content}`);\n      Object.assign(post, {app_key:appKey, auth_key});\n      request.post({url: url + '/admin/post_push', form: post});\n    }\n\n    delete post.cate;\n    delete post.options;\n    if(!Array.isArray(push_sites_keys)) { push_sites_keys = [push_sites_keys]; }\n    let pushes = push_sites_keys.map(key => push(post, push_sites[key]));\n    await Promise.all(pushes);\n  }\n\n  async lastest() {\n    let data = await this.modelInstance.getLatest(6);\n    return this.success(data);\n  }\n\n  getPostTime(data) {\n    data.update_time = think.datetime();\n    /**草稿可以没有创建时间**/\n    if( !data.create_time ) {\n      data.create_time = data.status != 0 ? data.update_time : null;\n    }else{\n      data.create_time = think.datetime(data.create_time);\n    }\n    return data;\n  }\n\n  getContentAndSummary(data) {\n    data.content = this.markdownToHtml(data.markdown_content);\n    data.summary = data.content.split('<!--more-->')[0].replace(/<[>]*>/g, '');\n    return data;\n  }\n\n  async getTagIds(tags) {\n    if(!tags){\n      return [];\n    }\n    if(!think.isArray(tags)){\n      tags = [tags];\n    }\n    let modelInstance = this.model('tag').setRelation(false), tagIds = [];\n    let promises = tags.map(name =>\n      modelInstance.where({name}).thenAdd({name, pathname: encodeURIComponent(name)}).then(data => tagIds.push({tag_id: data.id, name: name}))\n    );\n    await Promise.all(promises);\n    return tagIds;\n  }\n\n  /**\n   * generate toc name\n   * @param  {String} name []\n   * @return {String}      []\n   */\n  generateTocName(name){\n    name = name.trim().replace(/\\s+/g, '').replace(/\\)/g, '').replace(/[\\(\\,]/g, '-').toLowerCase();\n    if(/^[\\w\\-]+$/.test(name)){\n      return name;\n    }\n    return `toc-${think.md5(name).slice(0, 3)}`;\n  }\n  /**\n   * markdown to html\n   * @return {} []\n   */\n  markdownToHtml(content){\n    let tocContent = marked(markToc(content)).replace(/<a\\s+href=\"#([^\\\"]+)\">([^<>]+)<\\/a>/g, (a, b, c) => {\n      return `<a href=\"#${this.generateTocName(c)}\">${c}</a>`;\n    });\n\n    let markedContent = marked(content).replace(/<h(\\d)[^<>]*>(.*?)<\\/h\\1>/g, (a, b, c) => {\n      if(b == 2){\n        return `<h${b} id=\"${this.generateTocName(c)}\">${c}</h${b}>`;\n      }\n      return `<h${b} id=\"${this.generateTocName(c)}\"><a class=\"anchor\" href=\"#${this.generateTocName(c)}\"></a>${c}</h${b}>`;\n    });\n    // markedContent = markedContent.replace(/<h(\\d)[^<>]*>([^<>]+)<\\/h\\1>/, (a, b, c) => {\n    //   return `${a}<div class=\"toc\">${tocContent}</div>`;\n    // });\n\n    let highlightContent = markedContent.replace(/<pre><code\\s*(?:class=\"lang-(\\w+)\")?>([\\s\\S]+?)<\\/code><\\/pre>/mg, (a, language, text) => {\n      text = text.replace(/&#39;/g, '\"').replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/\\&quot;/g, '\"').replace(/\\&amp;/g, \"&\");\n      var result = highlight.highlightAuto(text, language ? [language] : undefined);\n      return `<pre><code class=\"hljs lang-${result.language}\">${result.value}</code></pre>`;\n    });\n\n    return highlightContent;\n  }\n\n}\n"
    ]
}