{
    "version": 3,
    "sources": [
        "../../../src/admin/model/post.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;mBAUE,I,mBAAa;AAAA;;AAAA,sCAAL,IAAK;AAAL,UAAK;AAAA;;AACX,4CAAM,IAAN,iDAAc,IAAd;;AAEA,SAAK,QAAL,GAAgB;AACd,WAAK,MAAM,KAAN,CAAY,YADH;AAEd,YAAM,MAAM,KAAN,CAAY,YAFJ;AAGd,YAAM;AACJ,cAAM,MAAM,KAAN,CAAY,SADd;;;AAIJ,eAAO;AAJH;AAHQ,KAAhB;AAUD,G;;;;;;;;;mBAOD,O,oBAAQ,I,EAAK;AACX,QAAI,cAAc,MAAM,QAAN,EAAlB;AACA,WAAO,sBAAc;AACnB,YAAM,CADa;AAEnB,cAAQ,CAFW;AAGnB,8BAHmB;AAInB,mBAAa,WAJM;AAKnB,iBAAW;AALQ,KAAd,EAMJ,IANI,CAAP;;AAQA,WAAO,KAAK,KAAL,CAAW,EAAC,UAAU,KAAK,QAAhB,EAA0B,QAAQ,IAAlC,EAAX,EAAoD,OAApD,CAA4D,IAA5D,CAAP;AACD,G;;mBAEK,Q;0FAAS,I;UACT,I;;;;;;qBAAa,KAAK,KAAL,CAAW,EAAC,IAAI,KAAK,EAAV,EAAX,EAA0B,IAA1B,E;;;AAAb,kB;;mBACD,MAAM,OAAN,CAAc,IAAd,C;;;;;+CACM,kBAAQ,MAAR,CAAe,IAAI,KAAJ,CAAU,gBAAV,CAAf,C;;;AAET,mBAAK,WAAL,GAAmB,MAAM,QAAN,EAAnB;+CACO,KAAK,KAAL,CAAW,EAAC,IAAI,KAAK,EAAV,EAAX,EAA0B,MAA1B,CAAiC,IAAjC,C;;;;;;;;;;;;;;;;;mBAGH,U;2FAAW,O;;;;;;qBACT,KAAK,KAAL,CAAW,WAAX,EAAwB,MAAxB,CAA+B,EAAC,gBAAD,EAA/B,C;;;;qBACA,KAAK,KAAL,CAAW,UAAX,EAAuB,MAAvB,CAA8B,EAAC,gBAAD,EAA9B,C;;;gDACC,KAAK,KAAL,CAAW,EAAC,IAAI,OAAL,EAAX,EAA0B,MAA1B,E;;;;;;;;;;;;;;;;;;;;;;;;mBAQT,Q,qBAAS,M,EAAO;AACd,QAAG,MAAH,EAAU;AACR,aAAO,KAAK,KAAL,CAAW,EAAC,SAAS,MAAV,EAAX,EAA8B,KAA9B,EAAP;AACD;AACD,WAAO,KAAK,KAAL,EAAP;AACD,G;;;;;;;;mBAMD,S,wBAAoB;AAAA,QAAV,IAAU,yDAAH,EAAG;;AAClB,WAAO,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAtB,CAA4B;AACjC,mBAAa,EAAC,MAAM,MAAM,QAAN,EAAP,EADoB;AAEjC,iBAAW,CAFsB,E;AAGjC,YAAM,CAH2B,E;AAIjC,cAAQ,C;AAJyB,KAA5B,EAKJ,KALI,CAKE,IALF,EAKQ,WALR,CAKoB,KALpB,EAK2B,KAL3B,CAKiC,kBALjC,EAKqD,MALrD,EAAP;AAMD,G;;mBAEK,W;2FAAY,I,EAAM,O;;;;;;qBAChB,gBAAM,WAAN,YAAkB,IAAlB,EAAwB,OAAxB,C;;;gDACC,KAAK,UAAL,E;;;;;;;;;;;;;;;;;mBAGH,W;2FAAY,I,EAAM,O;;;;;;qBAChB,gBAAM,WAAN,YAAkB,IAAlB,EAAwB,OAAxB,C;;;gDACC,KAAK,UAAL,E;;;;;;;;;;;;;;;;;mBAGH,Q;2FAAS,I,EAAM,O;;;;;;qBACb,gBAAM,QAAN,YAAe,IAAf,EAAqB,OAArB,C;;;gDACC,KAAK,UAAL,E;;;;;;;;;;;;;;;;;mBAGT,U,yBAAa;AACX,UAAM,GAAN,CAAU,aAAV;AACA,WAAO,MAAM,KAAN,CAAY,QAAZ,EAAsB,IAAtB,CAAP;AACD,G",
    "file": "../../../src/admin/model/post.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base';\n/**\n * relation model\n */\nexport default class extends Base {\n  /**\n   * init\n   * @param  {} args []\n   * @return {}         []\n   */\n  init(...args){\n    super.init(...args);\n\n    this.relation = {\n      tag: think.model.MANY_TO_MANY,\n      cate: think.model.MANY_TO_MANY,\n      user: {\n        type: think.model.BELONG_TO,\n        // fKey: 'user_id',\n        // key: 'display_name',\n        field: 'id,name,display_name'\n      }\n    }\n  }\n\n  /**\n   * 添加文章\n   * @param {[type]} data [description]\n   * @param {[type]} ip   [description]\n   */\n  addPost(data){\n    let create_time = think.datetime();\n    data = Object.assign({\n      type: 0,\n      status: 0,\n      create_time,\n      update_time: create_time,\n      is_public: 1\n    }, data);\n\n    return this.where({pathname: data.pathname, _logic: 'OR'}).thenAdd(data);\n  }\n\n  async savePost(data){\n    let info = await this.where({id: data.id}).find();\n    if(think.isEmpty(info)){\n      return Promise.reject(new Error('POST_NOT_EXIST'));\n    }\n    data.update_time = think.datetime();\n    return this.where({id: data.id}).update(data);\n  }\n\n  async deletePost(post_id) {\n    await this.model('post_cate').delete({post_id});\n    await this.model('post_tag').delete({post_id});\n    return this.where({id: post_id}).delete();\n  }\n\n  /**\n   * get count posts\n   * @param  {Number} userId []\n   * @return {Promise}        []\n   */\n  getCount(userId){\n    if(userId){\n      return this.where({user_id: userId}).count();\n    }\n    return this.count();\n  }\n  /**\n   * get latest posts\n   * @param  {Number} nums []\n   * @return {}      []\n   */\n  getLatest(nums = 10){\n    return this.order('id DESC').where({\n      create_time: {'<=': think.datetime()},\n      is_public: 1, //公开\n      type: 0, //文章\n      status: 3 //已经发布\n    }).limit(nums).setRelation(false).order('create_time DESC').select();\n  }\n\n  async afterUpdate(data, options) {\n    await super.afterUpdate(data, options);\n    return this.clearCache();\n  }\n\n  async afterDelete(data, options) {\n    await super.afterDelete(data, options);\n    return this.clearCache();\n  }\n\n  async afterAdd(data, options) {\n    await super.afterAdd(data, options);\n    return this.clearCache();\n  }\n\n  clearCache() {\n    think.log('clear cache');\n    return think.cache('post_1', null);\n  }\n}\n"
    ]
}