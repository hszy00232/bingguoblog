{
    "version": 3,
    "sources": [
        "../../../src/home/service/install.js"
    ],
    "names": [],
    "mappings": "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",
    "file": "../../../src/home/service/install.js",
    "sourcesContent": [
        "'use strict';\n\nimport fs from 'fs';\n\nexport default class extends think.service.base {\n  /**\n   * init\n   * @param  {[type]} info [description]\n   * @return {[type]}      [description]\n   */\n  init(dbConfig, accountConfig, ip){\n    this.dbConfig = dbConfig;\n    this.dbConfig.type = 'mysql';\n    this.accountConfig = accountConfig;\n    this.ip = ip;\n  }\n  /**\n   * get model\n   * @return {[type]} [description]\n   */\n  getModel(name, module){\n    let dbConfig\n    if(name === true){\n      dbConfig = think.extend({}, this.dbConfig);\n      dbConfig.database = '';\n      name = '';\n    }else{\n      dbConfig = this.dbConfig;\n    }\n    return this.model(name || 'user', {\n      adapter: {\n        mysql: dbConfig\n      }\n    }, module)\n  }\n  /**\n   *\n   * @return {[type]} [description]\n   */\n  checkDbInfo(){\n    let dbInstance = this.getModel(true);\n    return dbInstance.query('SELECT VERSION()').catch(() => {\n      return Promise.reject('数据库信息有误');\n    });\n  }\n  /**\n   * insert data\n   * @return {[type]} [description]\n   */\n  async insertData(){\n    let model = this.getModel(true);\n    let dbExist = await model.query(\"SELECT `TABLE_NAME` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_SCHEMA`='\" + this.dbConfig.database + \"'\");\n    if(think.isEmpty(dbExist)){\n      //忽略错误\n      await model.query('CREATE DATABASE `' + this.dbConfig.database + '`').catch(() => {});\n      //model.close();\n    }\n    let dbFile = think.ROOT_PATH + think.sep + 'firekylin.sql';\n    if(!think.isFile(dbFile)){\n      return Promise.reject('数据库文件（firekylin.sql）不存在，请重新下载');\n    }\n\n\n    let content = fs.readFileSync(dbFile, 'utf8');\n    content = content.split('\\n').filter(item => {\n      item = item.trim();\n      let ignoreList = ['#', 'LOCK', 'UNLOCK'];\n      for(let it of ignoreList){\n        if(item.indexOf(it) === 0){\n          return false;\n        }\n      }\n      return true;\n    }).join(' ');\n    content = content.replace(/\\/\\*.*?\\*\\//g, '').replace(/fk_/g, this.dbConfig.prefix || '');\n\n\n    //导入数据\n    model = this.getModel();\n    content = content.split(';');\n    try{\n      for(let item of content){\n        item = item.trim();\n        if(item){\n          think.log(item);\n          await model.query(item);\n        }\n      }\n    }catch(e){\n      think.log(e);\n      return Promise.reject('数据表导入失败，请在控制台下查看具体的错误信息，并在 GitHub 上发 issue。');\n    }\n\n    think.log('before clear data');\n\n\n    //清除已有的数据内容\n    let promises = ['cate', 'post', 'post_cate', 'post_tag', 'tag', 'user'].map(item => {\n      let modelInstance = this.getModel(item);\n      if( modelInstance ) {\n        modelInstance.where('1=1').delete();\n      }\n    });\n    await Promise.all(promises);\n\n\n    let optionsModel = this.getModel('options');\n    await optionsModel.where('1=1').update({value: ''});\n    let salt = think.uuid(10) + '!@#$%^&*';\n    this.password_salt = salt;\n\n    await optionsModel.where({key: 'password_salt'}).update({value: salt});\n    await optionsModel.where({key: 'title'}).update({value: 'FireKylin 系统'});\n    await optionsModel.where({key: 'logo_url'}).update({value: '/static/img/firekylin.jpg'});\n    await optionsModel.where({key: 'theme'}).update({value: 'firekylin'});\n\n    //optionsModel.close();\n  }\n  /**\n   * update config\n   * @return {[type]} [description]\n   */\n  updateConfig(){\n    let data = {\n      type: 'mysql',\n      adapter: {\n        mysql: this.dbConfig\n      }\n    }\n    let content = `\n      \"use strict\";\n      exports.__esModule = true;\n      exports.default = ${JSON.stringify(data, undefined, 4)}\n    `;\n    let dbConfigFile = think.APP_PATH + '/common/config/db.js';\n    fs.writeFileSync(dbConfigFile, content);\n    think.config('db', data);\n  }\n  /**\n   * create account\n   * @return {[type]} [description]\n   */\n  async createAccount(){\n\n    let password = think.md5(this.password_salt + this.accountConfig.password);\n\n    let model = this.getModel('user', 'admin');\n    let data = {\n      username: this.accountConfig.username,\n      password,\n      email: '',\n      type: 1,\n      status: 1,\n      ip: this.ip\n    }\n    await model.addUser(data);\n    //model.close();\n  }\n  /**\n   * run\n   * @return {[type]} [description]\n   */\n  async run(){\n    await this.checkDbInfo();\n    await this.insertData();\n    await this.createAccount();\n    this.updateConfig();\n    firekylin.setInstalled();\n    let optionsModel = this.getModel('options');\n    await optionsModel.getOptions(true);\n    //optionsModel.close();\n  }\n}\n"
    ]
}